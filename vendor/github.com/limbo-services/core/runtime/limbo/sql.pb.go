// Code generated by protoc-gen-gogo.
// source: github.com/limbo-services/core/runtime/limbo/sql.proto
// DO NOT EDIT!

package limbo

import proto "github.com/limbo-services/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/limbo-services/protobuf/gogoproto"
import _ "github.com/limbo-services/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ModelDescriptor struct {
	Table       string               `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	MessageType string               `protobuf:"bytes,7,opt,name=message_type,proto3" json:"message_type,omitempty"`
	Scanner     []*ScannerDescriptor `protobuf:"bytes,2,rep,name=scanner" json:"scanner,omitempty"`
	Column      []*ColumnDescriptor  `protobuf:"bytes,3,rep,name=column" json:"column,omitempty"`
	Join        []*JoinDescriptor    `protobuf:"bytes,4,rep,name=join" json:"join,omitempty"`
	DeepScanner []*ScannerDescriptor `protobuf:"bytes,8,rep,name=deep_scanner" json:"deep_scanner,omitempty"`
	DeepColumn  []*ColumnDescriptor  `protobuf:"bytes,5,rep,name=deep_column" json:"deep_column,omitempty"`
	DeepJoin    []*JoinDescriptor    `protobuf:"bytes,6,rep,name=deep_join" json:"deep_join,omitempty"`
}

func (m *ModelDescriptor) Reset()         { *m = ModelDescriptor{} }
func (m *ModelDescriptor) String() string { return proto.CompactTextString(m) }
func (*ModelDescriptor) ProtoMessage()    {}

func (m *ModelDescriptor) GetScanner() []*ScannerDescriptor {
	if m != nil {
		return m.Scanner
	}
	return nil
}

func (m *ModelDescriptor) GetColumn() []*ColumnDescriptor {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *ModelDescriptor) GetJoin() []*JoinDescriptor {
	if m != nil {
		return m.Join
	}
	return nil
}

func (m *ModelDescriptor) GetDeepScanner() []*ScannerDescriptor {
	if m != nil {
		return m.DeepScanner
	}
	return nil
}

func (m *ModelDescriptor) GetDeepColumn() []*ColumnDescriptor {
	if m != nil {
		return m.DeepColumn
	}
	return nil
}

func (m *ModelDescriptor) GetDeepJoin() []*JoinDescriptor {
	if m != nil {
		return m.DeepJoin
	}
	return nil
}

type ColumnDescriptor struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ignore      bool   `protobuf:"varint,2,opt,name=ignore,proto3" json:"ignore,omitempty"`
	MessageType string `protobuf:"bytes,3,opt,name=message_type,proto3" json:"message_type,omitempty"`
	FieldName   string `protobuf:"bytes,4,opt,name=field_name,proto3" json:"field_name,omitempty"`
	JoinedWith  string `protobuf:"bytes,5,opt,name=joined_with,proto3" json:"joined_with,omitempty"`
}

func (m *ColumnDescriptor) Reset()         { *m = ColumnDescriptor{} }
func (m *ColumnDescriptor) String() string { return proto.CompactTextString(m) }
func (*ColumnDescriptor) ProtoMessage()    {}

type ScannerDescriptor struct {
	MessageType string              `protobuf:"bytes,1,opt,name=message_type,proto3" json:"message_type,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Fields      string              `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	Column      []*ColumnDescriptor `protobuf:"bytes,4,rep,name=column" json:"column,omitempty"`
	Join        []*JoinDescriptor   `protobuf:"bytes,5,rep,name=join" json:"join,omitempty"`
}

func (m *ScannerDescriptor) Reset()         { *m = ScannerDescriptor{} }
func (m *ScannerDescriptor) String() string { return proto.CompactTextString(m) }
func (*ScannerDescriptor) ProtoMessage()    {}

func (m *ScannerDescriptor) GetColumn() []*ColumnDescriptor {
	if m != nil {
		return m.Column
	}
	return nil
}

func (m *ScannerDescriptor) GetJoin() []*JoinDescriptor {
	if m != nil {
		return m.Join
	}
	return nil
}

type JoinDescriptor struct {
	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	ForeignKey         string `protobuf:"bytes,3,opt,name=foreign_key,proto3" json:"foreign_key,omitempty"`
	ForeignMessageType string `protobuf:"bytes,4,opt,name=foreign_message_type,proto3" json:"foreign_message_type,omitempty"`
	MessageType        string `protobuf:"bytes,5,opt,name=message_type,proto3" json:"message_type,omitempty"`
	FieldName          string `protobuf:"bytes,6,opt,name=field_name,proto3" json:"field_name,omitempty"`
	JoinedWith         string `protobuf:"bytes,7,opt,name=joined_with,proto3" json:"joined_with,omitempty"`
	Table              string `protobuf:"bytes,8,opt,name=table,proto3" json:"table,omitempty"`
}

func (m *JoinDescriptor) Reset()         { *m = JoinDescriptor{} }
func (m *JoinDescriptor) String() string { return proto.CompactTextString(m) }
func (*JoinDescriptor) ProtoMessage()    {}

func init() {
	proto.RegisterType((*ModelDescriptor)(nil), "limbo.ModelDescriptor")
	proto.RegisterType((*ColumnDescriptor)(nil), "limbo.ColumnDescriptor")
	proto.RegisterType((*ScannerDescriptor)(nil), "limbo.ScannerDescriptor")
	proto.RegisterType((*JoinDescriptor)(nil), "limbo.JoinDescriptor")
}
